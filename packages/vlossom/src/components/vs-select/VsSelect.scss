@use '@/styles/mixin' as *;

.vs-select {
    display: flex;
    align-items: center;
    background-color: var(--vs-select-backgroundColor, var(--vs-no-color));
    border: var(--vs-select-border, solid 1px var(--vs-line-color));
    min-height: var(--vs-select-height, 2.4rem);
    border-radius: var(--vs-select-borderRadius, calc(var(--vs-radius-ratio) * 0.4rem));
    font-size: var(--vs-select-fontSize, 0.9rem);

    .select-wrap {
        flex: 1;

        .multiple-chips {
            display: flex;
            padding-left: 0.6rem;
            overflow: hidden;

            .chips {
                display: flex;
                align-items: center;
                flex-wrap: wrap;
                overflow-x: auto;
                overflow-y: hidden;
                padding-top: 0.3rem;

                .select-chip {
                    margin-top: 0.1rem;
                    margin-bottom: 0.1rem;
                }
                .chip-others {
                    margin-left: 0.2rem;
                    padding: 0 0.8rem;
                }
            }
        }

        input {
            padding: 0 0.8rem;
            border: none;
            outline: none;
            background-color: transparent;
            color: var(--vs-select-fontColor, var(--vs-font-color));
            cursor: pointer;
            min-width: 2rem;
            height: var(--vs-select-height, 2.4rem);

            &.autocomplete {
                cursor: default;
            }

            &:not(.autocomplete)::selection {
                background: none;
            }
        }
    }

    .clear-button {
        display: flex;
        justify-content: center;
        align-items: center;
        padding-right: 0.6rem;
        opacity: 0;
        transition: opacity 0.4s;
        color: var(--vs-input-clearButtonColor, var(--vs-font-color));
        background: none;
        border: none;
        cursor: pointer;
    }

    .arrow-box {
        display: flex;
        align-items: center;
        cursor: pointer;
        padding-right: 0.6rem;

        .arrow-icon {
            transition: transform 0.2s ease-out;

            &.arrow-up {
                transform: rotate(180deg);
            }
        }
    }

    &:hover {
        .clear-button {
            opacity: 1;
        }
    }

    &.dense {
        min-height: var(--vs-select-height, 2rem);
        font-size: var(--vs-select-fontSize, 0.8rem);
    }

    &.disabled {
        @include disabled;
    }

    &.readonly {
        @include readonly;
    }

    &.vs-state-box {
        @include state-box;
    }

    &:focus-within {
        @include focus-outline;
    }
}

.vs-options-container {
    z-index: 900;
    background-color: var(--vs-select-backgroundColor, var(--vs-no-color));
    border: var(--vs-select-border, solid 1px var(--vs-line-color));
    border-radius: var(--vs-select-borderRadius, calc(var(--vs-radius-ratio) * 0.4rem));
    overflow: hidden;

    .vs-select-options {
        max-height: 25rem;
        overflow: auto;
        list-style-type: none;
        outline: none;

        li {
            position: relative;
            display: flex;
            align-items: center;
            padding: 0 1.2rem;
            height: var(--vs-select-height, 2.4rem);
            background-color: var(--vs-no-color);
            color: var(--vs-select-fontColor, var(--vs-font-color));
            cursor: pointer;
            user-select: none;
            font-size: var(--vs-select-fontSize, 0.9rem);

            &:not(.selected).chased {
                background-color: var(--vs-select-hoverOptionBackgroundColor, var(--vs-area-bg-hover));
                color: var(--vs-select-hoverOptionColor, var(--vs-font-color));
            }

            &.select-all {
                .select-all-divider {
                    position: absolute;
                    left: 0;
                    bottom: 0;
                    width: 100%;
                    padding: 0 0.8rem;
                }
            }

            &.selected {
                background-color: var(--vs-select-selectedOptionBackgroundColor, var(--vs-area-bg-active));
                color: var(--vs-select-selectedOptionColor, var(--vs-font-color));
                font-weight: 600;
            }
        }
    }

    &.dense {
        li {
            min-height: var(--vs-select-height, 2rem);
            font-size: var(--vs-select-fontSize, 0.8rem);
        }
    }

    &.closing {
        user-select: none;
        pointer-events: none;
    }
}

@keyframes fade-in-top {
    0% {
        transform: translateY(-5px);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes fade-out-top {
    0% {
        transform: translateY(0);
        opacity: 1;
    }
    100% {
        transform: translateY(-5px);
        opacity: 0;
    }
}

.fade-enter-top {
    animation: fade-in-top 0.2s cubic-bezier(0.39, 0.575, 0.565, 1) forwards;
}

.fade-leave-top {
    animation: fade-out-top 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

@keyframes fade-in-bottom {
    0% {
        transform: translateY(5px);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes fade-out-bottom {
    0% {
        transform: translateY(0);
        opacity: 1;
    }
    100% {
        transform: translateY(5px);
        opacity: 0;
    }
}

.fade-enter-bottom {
    animation: fade-in-bottom 0.2s cubic-bezier(0.39, 0.575, 0.565, 1) forwards;
}

.fade-leave-bottom {
    animation: fade-out-bottom 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}
