@use '@/styles/variables' as *;
@use '@/styles/mixin' as *;

.vs-modal-node {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: var(--vs-modal-zIndex, var(--vs-modal-z-index));

    &.vs-dimmed {
        pointer-events: auto;
    }

    .vs-modal-dimmed {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 1;
        background-color: var(--vs-dimmed-background-color);
    }

    .vs-modal-wrap {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: block;
        overflow: auto;
        width: var(--vs-modal-width, fit-content);
        height: var(--vs-modal-height, fit-content);

        background-color: var(--vs-modal-backgroundColor, var(--vs-area-bg));
        box-shadow: var(--vs-modal-boxShadow, var(--vs-area-shadow-outer));
        border-radius: var(--vs-modal-borderRadius, calc(var(--vs-radius-ratio) * var(--vs-radius)));
        pointer-events: auto;

        // size
        @each $size in $sizes {
            &.#{$size} {
                width: var(--vs-modal-width-#{$size});
                height: var(--vs-modal-height-#{$size});
            }
        }

        .vs-modal-contents {
            position: relative;
            display: flex;
            flex-direction: column;
            overflow: auto;
            width: fit-content;
            height: fit-content;
            padding: var(--vs-modal-padding, 1.8rem 2.4rem);
            color: var(--vs-modal-fontColor, var(--vs-font-color));
            font-size: var(--vs-modal-fontSize, var(--vs-font-size));
            font-weight: var(--vs-modal-fontWeight, 400);

            .vs-modal-header {
                position: relative;
                padding-bottom: 1.6rem;
            }

            .vs-modal-footer {
                position: relative;
                padding-top: 1.6rem;
            }

            .vs-modal-body {
                position: relative;
                flex: auto;
            }
        }
    }
}

@container (min-width: 640px) {
    .vs-modal-node .vs-modal-wrap .vs-modal-contents {
        padding: var(--vs-modal-padding, 2.2rem 2.8rem);
    }
}

@container (min-width: 768px) {
    .vs-modal-node .vs-modal-wrap .vs-modal-contents {
        padding: var(--vs-modal-padding, 2.6rem 3.2rem);
    }
}

@container (min-width: 1024px) {
    .vs-modal-node .vs-modal-wrap .vs-modal-contents {
        padding: var(--vs-modal-padding, 3rem 3.6rem);
    }
}

@container (min-width: 1280px) {
    .vs-modal-node .vs-modal-wrap .vs-modal-contents {
        padding: var(--vs-modal-padding, 3.6rem 4.8rem);
    }
}
